[{"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/index.js":"1","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/reportWebVitals.js":"2","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/App.js":"3","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/store/reducer.js":"4","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/TodoList.js":"5","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Form.js":"6","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/maincom.js":"7","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/AppLog.js":"8","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/AppSign.js":"9","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/Formlogin.js":"10","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Task.js":"11","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Todo.js":"12","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/FormSign.js":"13","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/Formlog.js":"14","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/store/action.js":"15","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Assigntodo.js":"16","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/FormSuccess.js":"17","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/FormSignup2.js":"18","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/validateInfo.js":"19","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/useForm.js":"20"},{"size":733,"mtime":1611653108413,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1611076716781,"results":"23","hashOfConfig":"22"},{"size":1180,"mtime":1611670149089,"results":"24","hashOfConfig":"22"},{"size":449,"mtime":1611659068754,"results":"25","hashOfConfig":"22"},{"size":451,"mtime":1611400805261,"results":"26","hashOfConfig":"22"},{"size":1475,"mtime":1611682705630,"results":"27","hashOfConfig":"22"},{"size":2160,"mtime":1611400914752,"results":"28","hashOfConfig":"22"},{"size":436,"mtime":1611653811405,"results":"29","hashOfConfig":"22"},{"size":267,"mtime":1611163417787,"results":"30","hashOfConfig":"22"},{"size":2175,"mtime":1611719933232,"results":"31","hashOfConfig":"22"},{"size":6873,"mtime":1611810313393,"results":"32","hashOfConfig":"22"},{"size":4875,"mtime":1611809925509,"results":"33","hashOfConfig":"22"},{"size":751,"mtime":1611163417788,"results":"34","hashOfConfig":"22"},{"size":783,"mtime":1611647960624,"results":"35","hashOfConfig":"22"},{"size":1403,"mtime":1611660931301,"results":"36","hashOfConfig":"22"},{"size":4686,"mtime":1611774068210,"results":"37","hashOfConfig":"22"},{"size":328,"mtime":1611078978780,"results":"38","hashOfConfig":"22"},{"size":3711,"mtime":1611774850448,"results":"39","hashOfConfig":"22"},{"size":855,"mtime":1611078978781,"results":"40","hashOfConfig":"22"},{"size":789,"mtime":1611078978781,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"x13dyl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/index.js",[],["98","99"],"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/reportWebVitals.js",[],"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/App.js",["100","101","102","103","104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./Components/Form\";//importing components\nimport TodoList from \"./Components/TodoList\"; //importing components\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n} from \"react-router-dom\";\nimport Maincom from './Components/maincom';\nimport AppSign from './Components/Signup/AppSign';\nimport Formlogin from \"./Components/Signup/Formlogin\";\nimport AppLog from \"./Components/Signup/AppLog\";\nimport Task from \"./Components/Task\";\nimport { createBootstrapComponent } from \"react-bootstrap/esm/ThemeProvider\";\nimport {connect} from 'react-redux';\n\nfunction App(props) {\n  \nconsole.log(props.task)\nreturn (\n    <div>\n      \n      <Router>\n        <Switch>\n          <Route path=\"/protask/:username\" component={Task}/>\n          <Route path=\"/login\"><AppLog/></Route>\n          <Route path=\"/\"><AppSign/></Route>\n        </Switch>\n      </Router>\n      \n      \n    </div>\n  );\n}\n\nconst mapStateToProps= state=>{\n  return{\n    username:state.username,\n    task:state.task,\n    login:state.login\n  }\n}\nconst mapDispatchToProps=dispatch=>{\n\n}\nexport default connect(mapStateToProps)(App);\n","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/store/reducer.js",["109"],"const initialState={\n    username:null,\n    task:false,\n    login:false\n}\n\nconst reducer=(state=initialState,action)=>{\n    switch(action){\n        case \"LOGIN\":\n            return({...state,username:action.username,task:true});\n        case \"CHANGETOLOGIN\":\n            return({...state,login:true})   \n        case \"SIGNUP\":\n             return({...state,username:action.username,task:true})     \n    }\n    return state;\n}\n\nexport default reducer;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/TodoList.js",[],"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Form.js",[],"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/maincom.js",["110","111","112"],"import React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";//importing components\nimport TodoList from \"./TodoList\"; \nimport {withRouter} from 'react-router-dom';\nimport axios from \"axios\";\n\nconst Maincom=(props) => {\nconst [inputText, setInputText] = useState(\"\"); //state for input in the list\nconst [todos, setTodos] = useState([]); //state for storing input of todos,in array of objects\nconst [status, setStatus] = useState(\"all\");\nconst [filteredTodos, setFilteredTodos] = useState([]);\n//run once when starts\nuseEffect(() => {\n    axios.get('http://localhost:8000/user/getUser',{username:props.location.state.username}).then((res)=>{\n        console.log(res.data)\n        setTodos(res.data.myTask);\n    }).catch((err)=>{\n       console.log(err)\n    })\n    \n  }, []);\n\n  //use effect\n  useEffect(() => {\n      //functions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n      default:\n           setFilteredTodos(todos);\n           break;  \n    }\n  };\n  saveLocalTodos();\n    filterHandler();\n    \n  }, [todos, status]);\n //save to local storage\n const saveLocalTodos = () => {\n     localStorage.setItem(\"todos\",JSON.stringify(todos));\n };\n const getLocalTodos = () => {\n  if(localStorage.getItem('todos') == null){\n    localStorage.setItem('todos',JSON.stringify([]));\n  }else{\n    let todoLocal = JSON.parse(localStorage.getItem('todos'));\n    setTodos(todoLocal);\n  }\n };\n return( \n     <div className=\"App\">\n     <header>\n       <h1>ProTask</h1>\n     </header>\n     <div className=\"welc\">\n       <h2> Welcome {props.location.state.username} </h2>\n    </div>\n    <Form \n    todos={todos} \n    setTodos={setTodos} \n    setInputText={setInputText} \n    inputText={inputText}\n    setStatus={setStatus}\n    />   \n    <TodoList \n    filteredTodos={filteredTodos}\n    setTodos={setTodos} \n    todos={todos} \n    username={props.location.state.name}/>  \n  </div>\n );\n}\n export default withRouter(Maincom);","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/AppLog.js",["113","114","115","116","117","118"],"import React from 'react';\nimport './AppSign.css';\nimport Form from './FormSign';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Formlogin from './Formlogin';\nimport Formlog from './Formlog';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { queryByPlaceholderText } from '@testing-library/react';\nfunction AppLog(props) {\n \n  return(\n    \n    <Formlog />\n    \n\n    )  } ;\n\n\nexport default AppLog;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/AppSign.js",["119","120","121"],"import React from 'react';\nimport './AppSign.css';\nimport Form from './FormSign';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Formlogin from './Formlogin';\nfunction App() {\n  return(\n    \n    <Form/>\n    \n\n    )  } ;\n\n\nexport default App;\n","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/Formlogin.js",["122"],"import React from 'react';\nimport './FormSign.css';\nimport axios from 'axios';\nimport {Link, withRouter} from 'react-router-dom';\nimport * as actionTypes from '../store/action';\nimport {connect} from 'react-redux'\n\nclass Formlogin extends React.Component{\n    \n    state={\n        email:'',\n        password:''\n    }\n    \n    Submit=()=>{\n       console.log(this.state)\n       axios.post('http://localhost:8000/user/login',{email:this.state.email,password:this.state.password}).then((result)=>{\n        console.log(result)\n        this.props.history.push({\n             pathname:`/protask/${result.data.username}`,\n            \n           })\n       }).catch((err)=>{\n         console.log(err);\n       })\n    }\n\n    render(){\n        return(\n            <div className='form-content-right'>\n        <div className='form' >\n        <h1>\n          Login:\n        </h1>\n        <div className='form-inputs'>\n          <label className='form-label'>Email</label>\n          <input\n            className='form-input'\n            type='email'\n            name='email'\n            placeholder='Enter your email'\n            value={this.state.email}\n            onChange={(event)=>this.setState({email:event.target.value})}\n          />\n          \n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Password</label>\n          <input\n            className='form-input'\n            type='password'\n            name='password'\n            placeholder='Enter your password'\n            value={this.state.password}\n            onChange={(event)=>this.setState({password:event.target.value})}\n          />\n         \n        </div>\n        <button className='form-input-btn' type='submit' onClick={this.Submit}>\n          Login\n        </button>\n        </div>\n    </div>\n        )\n    }\n}\n\nconst mapStateToProps= state=>{\n  return{\n    username:state.username\n  }\n}\n\nconst mapDispatchToProps=dispatch=>{\n  return{\n    handleSubmit:(email,password)=>dispatch(actionTypes.fetchUser(email,password)),\n    User:(username)=>dispatch(actionTypes.getUser(username))\n  }\n}\nexport default (connect(mapStateToProps,mapDispatchToProps)(withRouter(Formlogin)));","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Task.js",["123","124","125","126","127"],"import axios from 'axios';\nimport React from 'react';\nimport Todo from './Todo';\nimport '../App.css';\nimport {useParams, withRouter} from 'react-router-dom';\nimport MultiSelect from \"react-multi-select-component\";\nimport Select from 'react-dropdown-select';\nimport {connect} from 'react-redux'\nimport * as actionTypes from './store/action'\nimport AssignTodo from './Assigntodo';\n\nclass Task extends React.Component{\n\n    state={\n        listOfTask:[{}],\n        mytask:'',\n        assigntask:'',\n        username:'',\n        selected1:[],\n        Data:[],\n        listOfAssignTask:[]\n    }\n    setSelected1 = (value)=>{\n         let arr=[...this.state.selected1];\n         arr.push(value)\n         this.setState({selected1:arr})\n    }\n    \n    setTodos=(myTask,assignedTask)=>{\n      this.setState({listOfTask:myTask,listOfAssignTask:assignedTask})\n    }\n    componentDidMount(){\n        const username=(this.props.match.params.username)\n        \n        console.log(username)\n        axios.post('http://localhost:8000/user/getUser',{username}).then((result)=>{\n            console.log(result);\n            this.setState({listOfTask:result.data.myTask,username,listOfAssignTask:result.data.assignedTask})\n            axios.get('http://localhost:8000/task/getAllUsers')\n            .then((res)=>{\n                \n                this.setState({Data:res.data,})\n                console.log(this.state.Data)\n            }).catch((err)=>{\n               console.log(err);\n            })\n            \n        }).catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    addTask=()=>{\n       axios.put(\"http://localhost:8000/task/addMyTask\",{username:this.state.username,task:this.state.mytask})\n       .then((result)=>{\n           console.log(result);\n           this.setState({task:'',listOfTask:result.data.myTask,user:result})\n       }).catch((err)=>{\n           console.log(err);\n       })\n    }\n\n    assignTask=()=>{\n      console.log(\"In assignTask\")\n      let listOfUser=[];\n      this.state.selected1.forEach(element=>{\n        let obj={}\n        obj[\"username\"]=element.label\n        listOfUser.push(obj)\n      })\n      console.log(listOfUser)\n      axios.post('http://localhost:8000/task/delegateTask',{listOfUser,Task:this.state.assigntask,username:this.props.match.params.username}).then((res)=>{\n        console.log(res)\n        this.setState({listOfTask:res.data.myTask,listOfAssignTask:res.data.assignedTask})\n        \n      }).catch((err)=>{\n        console.log(err);\n      })\n    }\n\n    ArrowRenderer2 = () =>{\n      return(\n          <button className=\"access-btn\" strokeWidth=\"0\">\n             <i className=\"fas fa-tags\"></i>\n          </button>\n         )\n          };\n\n    render(){\n        var myTask=[] ;\n        var assignTask=[]\n      \n         myTask=this.state.listOfTask.map((element,index)=>{\n            \n            \n            return <Todo Task={element.Task} username={this.state.username} status={element.status} progress={element.progress} set={this.setTodos}/>\n          \n        })\n        \n        assignTask=this.state.listOfAssignTask.map((element)=>{\n            return <AssignTodo Task={element.Task} username={this.state.username} status={element.status} progress={element.progress} set={this.setTodos}/>\n        })\n        \n        const data=[\n          {label: 'Simran', value:1},\n          {label: 'Virendra', value:2},\n          {label: 'Arvind', value:3},\n          {label:'Ayush', value:4}\n      ]\n        return(\n            <div className=\"App\">\n              <header>\n               ProTask\n              </header>\n              <div className=\"welc\">\n                <h2> Welcome {this.state.username} </h2>\n              </div>\n              {/* <form>\n                 <input value={this.state.task} onChange={(event)=>this.setState({...this.state,task:event.target.value})} type=\"text\" className=\"todo-input\" /> \n                 <button onClick={this.addTask} className=\"todo-button\" type=\"submit\">\n                   <i className=\"fas fa-plus-square\"></i>\n                 </button>\n                 <div className=\"select\">\n                   <select name=\"todos\" className=\"filter-todo\">\n                      <option value=\"all\">All</option>\n                      <option value=\"completed\">Completed</option>\n                      <option value=\"uncompleted\">Uncompleted</option>\n                   </select>\n                 </div>\n              </form>\n               */}\n              \n              <div className=\"task-grid\" >\n              {}\n                <div className= \"my-todo-column\">\n                  <h3>My tasks</h3>\n                <form>\n                 <input value={this.state.task} onChange={(event)=>this.setState({...this.state,mytask:event.target.value})} type=\"text\" className=\"todo-input\" /> \n                 <button onClick={this.addTask} className=\"todo-button\" type=\"submit\">\n                   <i className=\"fas fa-plus-square\"></i>\n                 </button>\n                 {/*<div className=\"select\">\n                   <select name=\"todos\" className=\"filter-todo\">\n                      <option value=\"all\">All</option>\n                      <option value=\"completed\">Completed</option>\n                      <option value=\"uncompleted\">Uncompleted</option>\n                   </select>\n                 </div>*/}\n              </form>\n                  {myTask}\n                  </div>\n                <div className=\"assign-todo-column\">\n                <h3>Assign tasks</h3>\n                <form>\n                 <input value={this.state.assigntask} onChange={(event)=>this.setState({...this.state,assigntask:event.target.value})} type=\"text\" className=\"todo-input\" /> \n                 \n                 <div className=\"dropdown\"> {/*<MultiSelect\n        options={this.state.Data}\n        value={this.state.selected1}\n        onChange={selected=>this.setState({selected1:selected})}\n        overrideStrings={{selectSomeItems:\"Assign to:\",}} \n                 />*/}\n                 <Select\n    multi\n    options={this.state.Data}\n    onChange={(values) => this.setState({selected1:values})}\n    className=\"react-select\"\n    placeholder=\"Assign Tasks ...\"\n  />\n\n </div>\n <button  className=\"todo-button\" type=\"submit\" onClick={this.assignTask}>\n                   <i className=\"fas fa-plus-square\"></i>\n                 </button>\n\n                 {/* <div className=\"select\">\n                   <select name=\"todos\" className=\"filter-todo\">\n                      <option value=\"all\">All</option>\n                      <option value=\"completed\">Completed</option>\n                      <option value=\"uncompleted\">Uncompleted</option>\n                   </select>\n                 </div> */}\n              </form> \n               {assignTask}\n                </div>\n              </div>\n            </div>  \n        )\n    }\n}\n\nexport default withRouter(Task);\n","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Todo.js",["128","129","130","131"],"import React, { useEffect, useState } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\nimport axios from 'axios';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport './Todo.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Todo = (props) => {\n \n const [progress,setprogress]=useState(props.progress)\n const [status,setstatus]=useState(props.status)\n const [inputProgress,setInputProgress]=useState(false)\n\n \n\n const updateTask=()=>{\n     axios.put('http://localhost:8000/task/updateTask',{Task:props.Task,progress}).then((result)=>{\n        console.log(result);\n        setprogress(progress)\n     }).catch((err)=>{\n         console.log(err);\n     })\n }\n\n const closeTask=()=>{\n     axios.put('http://localhost:8000/task/closeTask',{task:props.Task,username:props.username}).then((res)=>{\n         console.log(res);\n         setstatus(\"Closed\")\n     }).then((err)=>{\n         console.log(err);\n     })\n }\n\n const deleteTask=()=>{\n    axios.put('http://localhost:8000/task/deleteTask',{task:props.Task,username:props.username}).then((res)=>{\n        props.set(res.data.myTask,res.data.assignedTask)\n    }).catch((err)=>{\n        console.log(err)\n    })\n }\n/*\n    useEffect(()=>{\n        axios.get('http://localhost:8000/task/getAllUsers')\n        .then((res)=>{\n            console.log(res);\n            setData(res.data);\n            \n        }).catch((err)=>{\n           console.log(err);\n        })\n    },[])\n    const data=[\n        {label: 'Simran', value:1},\n        {label: 'Virendra', value:2},\n        {label: 'Arvind', value:3},\n        {label:'Ayush', value:4}\n    ]\n    const [Data,setData]=useState([{}]);\n    const [selected, setSelected] = useState([]);\n    const [selected1, setSelected1] = useState([]);\n    const ArrowRenderer1 = () => {\n        return(\n            <button className=\"share-btn\">\n       \n            <i className=\"fas fa-share-alt\"  ></i>\n            \n            </button>\n        )\n    };\n    const ArrowRenderer2 = () =>{\nreturn(\n    \n    <button className=\"access-btn\" strokeWidth=\"0\">\n       <i className=\"fas fa-tags\"></i>\n    </button>\n   )\n    };\n    //const ArrowRenderer = ({ expanded }) => (expanded ? \"🦉\" : \"🦚\");\n\n   /* const rendershareicon=(props)=>{\n    return(\n        ArrowRenderer.rendershareicon && (\n            <ArrowRenderer.rendershareicon{...props}>\n            <button className=\"share-btn\">\n       \n        <i className=\"fas fa-share-alt\"  ></i>\n        \n        </button>\n            </ArrowRenderer.rendershareicon>\n        )       \n        );\n    }; */\n  //const now=150;\n    return(    \n<div className=\"todo\">\n    <li className= {`todo-item${status===\"Open\"?\"Open\":\"Closed\"}`}>\n        {props.Task}\n    </li>\n    {/* className=\"fas fa-pencil\"<input className=\"input-progress\"></input>  */}\n\n    <input className=\"changeProgress\"  placeholder='Edit Progress' disabled={status===\"Open\"?false:true} onChange={(event)=>setprogress(event.target.value)}></input>\n   \n    <div className=\"edit\">\n        <button className=\"edit-btn\" onClick={updateTask}>\n        <i className=\"fas fa-tasks\"></i>\n        </button></div>\n   \n    <div className=\"progress\">\n          <ProgressBar variant=\"info\" now={progress} label={`${progress}%`} />\n          </div>\n    \n    <div className=\"status\">\n    <button className=\"status-btn\" onClick={closeTask}>\n              {props.status ==='Open'? <i className=\"fas fa-eye\"></i> :<i className=\"fas fa-eye-slash\"></i> }\n          </button>\n          </div>\n          <div className=\"delete\">\n          <button className=\"trash-btn\" onClick={deleteTask}>\n        <i className=\"fas fa-trash\"></i>\n        </button>\n        </div>\n          \n          \n        {/* <button className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n    </button>  */}\n       {/* <button className=\"share-btn\">\n       \n        <i className=\"fas fa-share-alt\"  ></i>\n        \n        </button>\n        <button onClick={deleteHandler} className=\"access-btn\">\n        <i className=\"fas fa-tags\"></i>\n        </button>\n         */} \n{/*<div className=\"dropdown\">\n <MultiSelect\n        options={Data}\n        value={selected}\n        onChange={setSelected}\n        ArrowRenderer= {ArrowRenderer1}\n        overrideStrings={{selectSomeItems:\"Share with:\",}}\n      /> \n      </div>\n      <div className=\"dropdown\"> <MultiSelect\n        options={Data}\n        value={selected1}\n        onChange={setSelected1}\n        ArrowRenderer= {ArrowRenderer2}\n        overrideStrings={{selectSomeItems:\"Assign to:\",}}\n      />\n </div>*/}\n      \n     {/*  <div className=\"progress\">\n          <label id=\"status\">\n              {props.status}\n          </label>\n          <label id=\"changeProgress\">Change Progress</label>\n          <ProgressBar variant=\"Danger\" now={props.progress} label={`${props.progress}%`} />\n      </div> */}\n    </div>\n   \n    );\n};\nexport default Todo;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/FormSign.js",["132","133"],"import React, { useState } from 'react';\nimport Formlogin from './Formlogin';\nimport './FormSign.css';\nimport Signup from './FormSignup2';\nimport FormSuccess from './FormSuccess';\n\nconst Form = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <>\n      <div className='form-container'>\n        <span className='close-btn'>×</span>\n        <div className='form-content-left'>\n        <header>\n  <h1>ProTask</h1>\n      </header>\n      <img className='form-img' src='img/img-2.png' alt='spaceship' />\n        </div>\n        {!isSubmitted ? (\n          <Signup  />\n        ) : (\n          <FormSuccess />\n        )} \n      </div>\n    </>\n  );\n};\n\nexport default Form;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/Formlog.js",["134","135"],"import React, { useState } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport Formlogin from './Formlogin';\nimport './FormSign.css';\nimport FormSuccess from './FormSuccess';\nconst Formlog = (props) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <>\n      <div className='form-container'>\n        <span className='close-btn'>×</span>\n        <div className='form-content-left'>\n        <header>\n  <h1>ProTask</h1>\n      </header>\n      <img className='form-img' src='img/img-2.png' alt='spaceship' />\n        </div>\n        {!isSubmitted ? (\n          <Formlogin  />\n        ) : (\n          <FormSuccess />\n        )} \n      </div>\n    </>\n  );\n};\n\nexport default Formlog;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/store/action.js",[],"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Assigntodo.js",["136","137","138","139"],"import React, { useEffect, useState } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\nimport axios from 'axios';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport './Todo.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst AssignTodo = (props) => {\n    \n const [progress,setprogress]=useState(props.progress)\n const [status,setstatus]=useState(props.status)\n \n const updateTask=()=>{\n     axios.put('http://localhost:8000/task/updateTask',{Task:props.Task,progress}).then((result)=>{\n        console.log(result);\n     }).catch((err)=>{\n         console.log(err);\n     })\n }\n\n const closeTask=()=>{\n    axios.put('http://localhost:8000/task/closeTask',{task:props.Task,username:props.username}).then((res)=>{\n        console.log(res);\n        setstatus(\"Closed\")\n    }).then((err)=>{\n        console.log(err);\n    })\n}\nconst deleteTask=()=>{\n    axios.put('http://localhost:8000/task/deleteTask',{task:props.Task,username:props.username}).then((res)=>{\n        props.set(res.data.myTask,res.data.assignedTask)\n    }).catch((err)=>{\n        console.log(err)\n    })\n }\n/*\n    useEffect(()=>{\n        axios.get('http://localhost:8000/task/getAllUsers')\n        .then((res)=>{\n            console.log(res);\n            setData(res.data);\n            \n        }).catch((err)=>{\n           console.log(err);\n        })\n    },[])\n    const data=[\n        {label: 'Simran', value:1},\n        {label: 'Virendra', value:2},\n        {label: 'Arvind', value:3},\n        {label:'Ayush', value:4}\n    ]\n    const [Data,setData]=useState([{}]);\n    const [selected, setSelected] = useState([]);\n    const [selected1, setSelected1] = useState([]);\n    const ArrowRenderer1 = () => {\n        return(\n            <button className=\"share-btn\">\n       \n            <i className=\"fas fa-share-alt\"  ></i>\n            \n            </button>\n        )\n    };\n    const ArrowRenderer2 = () =>{\nreturn(\n    \n    <button className=\"access-btn\" strokeWidth=\"0\">\n       <i className=\"fas fa-tags\"></i>\n    </button>\n   )\n    };\n    //const ArrowRenderer = ({ expanded }) => (expanded ? \"🦉\" : \"🦚\");\n\n   /* const rendershareicon=(props)=>{\n    return(\n        ArrowRenderer.rendershareicon && (\n            <ArrowRenderer.rendershareicon{...props}>\n            <button className=\"share-btn\">\n       \n        <i className=\"fas fa-share-alt\"  ></i>\n        \n        </button>\n            </ArrowRenderer.rendershareicon>\n        )       \n        );\n    }; */\n  //const now=150;\n    return(    \n<div className=\"todo\">\n    <li className= {`todo-item${status===\"Open\"?\"Open\":\"Closed\"}`}>\n        {props.Task}\n    </li>\n    {/* className=\"fas fa-pencil\"<input className=\"input-progress\"></input>  */}\n\n    <button className=\"changeProgress\" onClick={closeTask}>Close Task</button>\n   \n    <div className=\"edit\">\n        <button className=\"edit-btn\" >\n        <i className=\"fas fa-tasks\"></i>\n        </button></div>\n   \n    <div className=\"progress\">\n          <ProgressBar variant=\"info\" now={progress} label={`${progress}%`} />\n          </div>\n    \n    <div className=\"status\">\n    <button className=\"status-btn\" onClick={closeTask}>\n              {props.status ==='Open'? <i className=\"fas fa-eye\"></i> :<i className=\"fas fa-eye-slash\"></i> }\n          </button>\n          </div>\n          <div className=\"delete\">\n          <button className=\"trash-btn\" onClick={deleteTask}>\n        <i className=\"fas fa-trash\"></i>\n        </button>\n        </div>\n          \n          \n        {/* <button className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n    </button>  */}\n       {/* <button className=\"share-btn\">\n       \n        <i className=\"fas fa-share-alt\"  ></i>\n        \n        </button>\n        <button onClick={deleteHandler} className=\"access-btn\">\n        <i className=\"fas fa-tags\"></i>\n        </button>\n         */} \n{/*<div className=\"dropdown\">\n <MultiSelect\n        options={Data}\n        value={selected}\n        onChange={setSelected}\n        ArrowRenderer= {ArrowRenderer1}\n        overrideStrings={{selectSomeItems:\"Share with:\",}}\n      /> \n      </div>\n      <div className=\"dropdown\"> <MultiSelect\n        options={Data}\n        value={selected1}\n        onChange={setSelected1}\n        ArrowRenderer= {ArrowRenderer2}\n        overrideStrings={{selectSomeItems:\"Assign to:\",}}\n      />\n </div>*/}\n      \n     {/*  <div className=\"progress\">\n          <label id=\"status\">\n              {props.status}\n          </label>\n          <label id=\"changeProgress\">Change Progress</label>\n          <ProgressBar variant=\"Danger\" now={props.progress} label={`${props.progress}%`} />\n      </div> */}\n    </div>\n   \n    );\n};\nexport default AssignTodo;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/FormSuccess.js",["140"],"import React from 'react';\nimport './FormSign.css';\n\nconst FormSuccess = () => {\n  return (\n    <div className='form-content-right'>\n      <h1 className='form-success'>We have received your request!</h1>\n      <img className='form-img-2' src='img/img-3.svg' alt='success-image' />\n    </div>\n  );\n};\n\nexport default FormSuccess;","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/FormSignup2.js",["141","142","143","144","145"],"import React from 'react';\nimport axios from 'axios';\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport {Link, withRouter} from 'react-router-dom';\nimport './FormSign.css';\nimport {connect} from 'react-redux'\nimport * as actionTypes from '../store/action';\n\n\nclass SignUp extends React.Component{\n    \n    state={\n        email:'',\n        password:'',\n        confirmPassword:'',\n        username:''\n    }\n    \n    Submit=()=>{\n      if(this.state.email.length!==0&&this.state.password.length!==0&&this.state.confirmPassword.length!==0&&this.state.username.length!==0)\n      {  axios.post('http://localhost:8000/user/signup',{email:this.state.email,password:this.state.password,username:this.state.username}).then((res)=>{\n      console.log(res);\n      this.props.history.push({\n        pathname:`/protask/${res.data.username}`,\n        \n     });\n      }).catch((err)=>{\n      console.log(err);\n      })\n    }\n    }\n    \n    \n    render(){\n        return(\n            <div className='form-content-right' >\n        <div className='form' >\n        <h1>\n          Get started with ProTask today! Create your account by signing up.\n        </h1>\n        <div className='form-inputs'>\n          <label className='form-label'>Username</label>\n          <input\n            className='form-input'\n            type='text'\n            name='username'\n            placeholder='Enter your username'\n            value={this.state.username}\n            onChange={(event)=>this.setState({username:event.target.value})}\n          />\n          {/*{errors.username && <p>{errors.username}</p>}  */}\n          \n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Email</label>\n          <input\n            className='form-input'\n            type='email'\n            name='email'\n            placeholder='Enter your email'\n            value={this.state.email}\n            onChange={(event)=>this.setState({email:event.target.value})}\n          />\n          {/*  {errors.email && <p>{errors.email}</p>} */}\n         \n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Password</label>\n          <input\n            className='form-input'\n            type='password'\n            name='password'\n            placeholder='Enter your password'\n            value={this.state.password}\n            onChange={(event)=>this.setState({password:event.target.value})}\n          />\n          {/*{errors.password && <p>{errors.password}</p>}  */}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Confirm Password</label>\n          <input\n            className='form-input'\n            type='password'\n            name='password2'\n            placeholder='Confirm your password'\n            value={this.state.confirmPassword}\n            onChange={(event)=>this.setState({confirmPassword:event.target.value})}\n          />\n         {/* {errors.password2 && <p>{errors.password2}</p>} */}\n        </div>\n        <button className='form-input-btn' type='submit' onClick={this.Submit}>\n          Sign up\n        </button>\n\n        <span className='form-input-login'>\n          Already have an account? <Link to=\"/login\"><button className=\"login-btn\" >Login here</button></Link>\n        </span>\n        </div>\n    </div>\n        )\n    }\n}\n\nconst mapStateToProps= state=>{\n  return{\n    username:state.username\n  }\n}\n\nconst mapDispatchToProps=dispatch=>{\n  return{\n    handleSubmit:(email,password,username,confirmPassword)=>dispatch(actionTypes.SignUp(email,password,username,confirmPassword)),\n    changeToLogin:()=>dispatch(actionTypes.changeToLogin)\n  }\n}\n\nexport default withRouter(SignUp);","/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/validateInfo.js",[],"/Users/ar-virendra.singh/Protask-frontend/ProTask-2.0/src/Components/Signup/useForm.js",["146"],"import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;",["147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"157","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"158","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":12},{"ruleId":"153","severity":1,"message":"159","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":16},{"ruleId":"153","severity":1,"message":"160","line":8,"column":3,"nodeType":"155","messageId":"156","endLine":8,"endColumn":7},{"ruleId":"153","severity":1,"message":"161","line":11,"column":8,"nodeType":"155","messageId":"156","endLine":11,"endColumn":15},{"ruleId":"153","severity":1,"message":"162","line":13,"column":8,"nodeType":"155","messageId":"156","endLine":13,"endColumn":17},{"ruleId":"153","severity":1,"message":"163","line":16,"column":10,"nodeType":"155","messageId":"156","endLine":16,"endColumn":34},{"ruleId":"153","severity":1,"message":"164","line":45,"column":7,"nodeType":"155","messageId":"156","endLine":45,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":8,"column":5,"nodeType":"167","messageId":"168","endLine":15,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":21,"column":6,"nodeType":"171","endLine":21,"endColumn":8,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"173","line":42,"column":6,"nodeType":"171","endLine":42,"endColumn":21,"suggestions":"174"},{"ruleId":"153","severity":1,"message":"175","line":47,"column":8,"nodeType":"155","messageId":"156","endLine":47,"endColumn":21},{"ruleId":"153","severity":1,"message":"158","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":12},{"ruleId":"153","severity":1,"message":"176","line":4,"column":26,"nodeType":"155","messageId":"156","endLine":4,"endColumn":32},{"ruleId":"153","severity":1,"message":"177","line":4,"column":34,"nodeType":"155","messageId":"156","endLine":4,"endColumn":39},{"ruleId":"153","severity":1,"message":"162","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":17},{"ruleId":"153","severity":1,"message":"178","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":19},{"ruleId":"153","severity":1,"message":"179","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":32},{"ruleId":"153","severity":1,"message":"176","line":4,"column":26,"nodeType":"155","messageId":"156","endLine":4,"endColumn":32},{"ruleId":"153","severity":1,"message":"177","line":4,"column":34,"nodeType":"155","messageId":"156","endLine":4,"endColumn":39},{"ruleId":"153","severity":1,"message":"162","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":17},{"ruleId":"153","severity":1,"message":"160","line":4,"column":9,"nodeType":"155","messageId":"156","endLine":4,"endColumn":13},{"ruleId":"153","severity":1,"message":"180","line":5,"column":9,"nodeType":"155","messageId":"156","endLine":5,"endColumn":18},{"ruleId":"153","severity":1,"message":"181","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":19},{"ruleId":"153","severity":1,"message":"182","line":8,"column":9,"nodeType":"155","messageId":"156","endLine":8,"endColumn":16},{"ruleId":"153","severity":1,"message":"183","line":9,"column":13,"nodeType":"155","messageId":"156","endLine":9,"endColumn":24},{"ruleId":"153","severity":1,"message":"184","line":104,"column":15,"nodeType":"155","messageId":"156","endLine":104,"endColumn":19},{"ruleId":"153","severity":1,"message":"157","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"181","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"153","severity":1,"message":"185","line":12,"column":9,"nodeType":"155","messageId":"156","endLine":12,"endColumn":22},{"ruleId":"153","severity":1,"message":"186","line":12,"column":23,"nodeType":"155","messageId":"156","endLine":12,"endColumn":39},{"ruleId":"153","severity":1,"message":"162","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"187","line":10,"column":12,"nodeType":"155","messageId":"156","endLine":10,"endColumn":22},{"ruleId":"153","severity":1,"message":"178","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"153","severity":1,"message":"187","line":9,"column":12,"nodeType":"155","messageId":"156","endLine":9,"endColumn":22},{"ruleId":"153","severity":1,"message":"157","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"181","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"153","severity":1,"message":"188","line":10,"column":18,"nodeType":"155","messageId":"156","endLine":10,"endColumn":29},{"ruleId":"153","severity":1,"message":"189","line":13,"column":8,"nodeType":"155","messageId":"156","endLine":13,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":8,"column":7,"nodeType":"192","endLine":8,"endColumn":77},{"ruleId":"153","severity":1,"message":"193","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":16},{"ruleId":"153","severity":1,"message":"194","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":15},{"ruleId":"153","severity":1,"message":"182","line":7,"column":9,"nodeType":"155","messageId":"156","endLine":7,"endColumn":16},{"ruleId":"153","severity":1,"message":"195","line":105,"column":7,"nodeType":"155","messageId":"156","endLine":105,"endColumn":22},{"ruleId":"153","severity":1,"message":"164","line":111,"column":7,"nodeType":"155","messageId":"156","endLine":111,"endColumn":25},{"ruleId":"169","severity":1,"message":"196","line":34,"column":5,"nodeType":"171","endLine":34,"endColumn":13,"suggestions":"197"},{"ruleId":"149","replacedBy":"198"},{"ruleId":"151","replacedBy":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Form' is defined but never used.","'TodoList' is defined but never used.","'Link' is defined but never used.","'Maincom' is defined but never used.","'Formlogin' is defined but never used.","'createBootstrapComponent' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state.username'. Either include it or remove the dependency array.","ArrayExpression",["202"],"React Hook useEffect has a missing dependency: 'saveLocalTodos'. Either include it or remove the dependency array.",["203"],"'getLocalTodos' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'propTypes' is defined but never used.","'queryByPlaceholderText' is defined but never used.","'useParams' is defined but never used.","'MultiSelect' is defined but never used.","'connect' is defined but never used.","'actionTypes' is defined but never used.","'data' is assigned a value but never used.","'inputProgress' is assigned a value but never used.","'setInputProgress' is assigned a value but never used.","'submitForm' is defined but never used.","'setprogress' is assigned a value but never used.","'updateTask' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'validate' is defined but never used.","'useForm' is defined but never used.","'mapStateToProps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["204"],["200"],["201"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [props.location.state.username]",{"range":"211","text":"212"},"Update the dependencies array to be: [todos, status, saveLocalTodos]",{"range":"213","text":"214"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"215","text":"216"},[787,789],"[props.location.state.username]",[1262,1277],"[todos, status, saveLocalTodos]",[690,698],"[callback, errors, isSubmitting]"]